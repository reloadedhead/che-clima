{"version":3,"sources":["components/weather-icon/index.tsx","components/forecast-card/index.tsx","components/weather-details/index.tsx","components/weather-card/index.tsx","screens/city/index.tsx"],"names":["WeatherIcon","props","id","color","style","height","size","width","useStyles","makeStyles","palette","card","borderRadius","minWidth","textAlign","temperature","fontFamily","ForecastItem","forecast","classes","ListItem","ListItemAvatar","morning","weather","ListItemText","primary","format","parseISO","date","locale","es","secondary","description","ListItemSecondaryAction","Typography","className","temp_min","temp_max","ForecastCard","forecastReport","useWeather","days","Card","CardContent","List","subheader","ListSubheader","map","day","WeatherDetailItem","detail","ListItemIcon","icon","label","value","WeatherDetails","currentWeather","sunReport","theme","useTheme","details","humidity","text","pressure","visibility","sun","sunrise","sunset","fontSize","fontWeight","letterSpacing","marginTop","marginBottom","locationSubheader","grey","statLabel","margin","statValue","progress","display","flexDirection","justifyContent","alignItems","WeatherCard","styles","location","loading","showIcon","Boolean","useState","showDetails","setShowDetails","CircularProgress","variant","toFixed","name","Divider","Box","p","flex","wind","speed","feels_like","Collapse","in","mountOnEnter","unmountOnExit","CardActions","Button","endIcon","onClick","show","createStyles","breakpoints","up","marginRight","marginLeft","CityWeather","getAllWeatherData","useEffect","a","Grid","container","spacing","item","xs"],"mappings":"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","file":"static/js/4.28c76bcb.chunk.js","sourcesContent":["import {\n  WiDaySunny,\n  WiDayCloudy,\n  WiRainMix,\n  WiDaySunnyOvercast,\n  WiRain,\n  WiThunderstorm,\n} from \"weather-icons-react\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nconst WeatherIcon = (props: { size: number; id: number }) => {\n  switch (props.id) {\n    case 3:\n      return <WiDaySunny {...props} color=\"#FFB719\" />;\n    case 13:\n      return <WiDayCloudy {...props} color=\"#F2F2F1\" />;\n    case 19:\n      return <WiDaySunnyOvercast {...props} color=\"#FFB719\" />;\n    case 37:\n      return <WiDayCloudy {...props} color=\"#F2F2F1\" />;\n    case 43:\n      return <WiRainMix {...props} color=\"#F2F2F1\" />;\n    case 71:\n      return <WiRainMix {...props} color=\"#F2F2F1\" />;\n    case 72:\n      return <WiRainMix {...props} color=\"#F2F2F1\" />;\n    case 73:\n      return <WiRain {...props} color=\"#F2F2F1\" />;\n    case 74:\n      return <WiRain {...props} color=\"#F2F2F1\" />;\n    case 76:\n      return <WiThunderstorm {...props} color=\"#F2F2F1\" />;\n    default:\n      return <ErrorIcon style={{ height: props.size, width: props.size }} />;\n  }\n};\n\nexport default WeatherIcon;\n","import {\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { format, parseISO } from \"date-fns\";\nimport es from \"date-fns/locale/es\";\nimport React from \"react\";\nimport { useWeather } from \"../../contexts/weather\";\nimport { Forecast } from \"../../types\";\nimport WeatherIcon from \"../weather-icon\";\n\nconst useStyles = makeStyles(({ palette }) => ({\n  card: {\n    borderRadius: 12,\n    minWidth: 256,\n    textAlign: \"center\",\n  },\n  temperature: {\n    fontFamily: \"Roboto Slab\",\n  },\n}));\n\nconst ForecastItem = (forecast: Forecast) => {\n  const classes = useStyles();\n  return (\n    <ListItem>\n      <ListItemAvatar>\n        <WeatherIcon size={24} id={forecast.morning?.weather.id || 0} />\n      </ListItemAvatar>\n      <ListItemText\n        primary={format(parseISO(forecast.date), \"EEEE\", { locale: es })}\n        secondary={`${forecast.morning?.weather.description} por la mañana`}\n      />\n      <ListItemSecondaryAction>\n        <Typography className={classes.temperature}>\n          {`${forecast.temp_min}°C / ${forecast.temp_max}°C`}\n        </Typography>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nconst ForecastCard = () => {\n  const { forecastReport } = useWeather();\n  const classes = useStyles();\n  const [, ...days] = forecastReport?.forecast || [];\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <List subheader={<ListSubheader>Pronóstico</ListSubheader>}>\n          {forecastReport ? days.map(day => <ForecastItem key={day.date} {...day} />) : null}\n        </List>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ForecastCard;\n","import React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  useTheme,\n} from \"@material-ui/core\";\nimport { useWeather } from \"../../contexts/weather\";\nimport {\n  WiBarometer,\n  WiHumidity,\n  WiDust,\n  WiSunrise,\n  WiSunset,\n} from \"weather-icons-react\";\n\ninterface WeatherDetail {\n  label: string;\n  value: string;\n  icon: JSX.Element;\n}\n\nconst WeatherDetailItem = (detail: WeatherDetail) => (\n  <ListItem>\n    <ListItemIcon>{detail.icon}</ListItemIcon>\n    <ListItemText primary={detail.label} />\n    <ListItemSecondaryAction>\n      <span>{detail.value}</span>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n\nconst WeatherDetails = () => {\n  const { currentWeather, sunReport } = useWeather();\n  const theme = useTheme();\n\n  const details: WeatherDetail[] = [\n    {\n      label: \"Humedad\",\n      value: `${currentWeather?.humidity}%`,\n      icon: <WiHumidity size={36} color={theme.palette.text.primary} />,\n    },\n    {\n      label: \"Presión atmosférica\",\n      value: `${currentWeather?.pressure} HPa`,\n      icon: <WiBarometer size={36} color={theme.palette.text.primary} />,\n    },\n    {\n      label: \"Visibilidad\",\n      value: `${currentWeather?.visibility} Km`,\n      icon: <WiDust size={36} color={theme.palette.text.primary} />,\n    },\n    {\n      label: \"Amanecer\",\n      value: `${sunReport?.sun.sunrise}`,\n      icon: <WiSunrise size={36} color={theme.palette.text.primary} />,\n    },\n    {\n      label: \"Atardecer\",\n      value: `${sunReport?.sun.sunset}`,\n      icon: <WiSunset size={36} color={theme.palette.text.primary} />,\n    },\n  ];\n\n  return (\n    <List>\n      {details.map(detail => <WeatherDetailItem key={detail.label} {...detail} />)}\n    </List>\n  );\n};\n\nexport default WeatherDetails;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {\n  Button,\n  CardActions,\n  CircularProgress,\n  Collapse,\n  Typography,\n} from \"@material-ui/core\";\nimport { useWeather } from \"../../contexts/weather\";\nimport WeatherDetails from \"../weather-details\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport WeatherIcon from \"../weather-icon\";\n\nconst useStyles = makeStyles(({ palette }) => ({\n  card: {\n    borderRadius: 12,\n    minWidth: 256,\n    textAlign: \"center\",\n  },\n  weather: {\n    fontSize: \"3rem\",\n    fontWeight: \"bold\",\n    fontFamily: \"Roboto Slab\",\n    letterSpacing: \"0.5px\",\n    marginTop: 8,\n    marginBottom: 0,\n  },\n  locationSubheader: {\n    fontSize: \"2rem\",\n    fontFamily: \"Yellowtail\",\n    letterSpacing: \"0.5px\",\n    color: palette.grey[500],\n    marginBottom: \"0.875em\",\n  },\n  statLabel: {\n    fontSize: 16,\n    color: palette.grey[500],\n    fontWeight: 500,\n    fontFamily: \"Roboto\",\n    margin: 0,\n  },\n  statValue: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    fontFamily: \"Roboto Slab\",\n    marginBottom: 4,\n    letterSpacing: \"1px\",\n  },\n  progress: {\n    marginTop: 30,\n    marginBottom: 30,\n  },\n  currentWeather: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nexport const WeatherCard = () => {\n  const styles = useStyles();\n  const { currentWeather, location, loading } = useWeather();\n  const showIcon = Boolean(currentWeather && !loading);\n  const [showDetails, setShowDetails] = useState(false);\n  return (\n    <Card className={styles.card}>\n      <CardContent className={styles.currentWeather}>\n        {showIcon ? (\n          <WeatherIcon id={currentWeather?.weather.id || 0} size={120} />\n        ) : (\n          <CircularProgress className={styles.progress} size={60} />\n        )}\n        <Typography variant=\"h1\" className={styles.weather}>\n          {(currentWeather && `${currentWeather.temperature.toFixed(1)}°C`) ||\n            \"\"}\n        </Typography>\n      </CardContent>\n      <Typography className={styles.locationSubheader}>{`${\n        currentWeather?.weather.description || \"\"\n      } en ${location.name}`}</Typography>\n      <Divider variant=\"middle\" />\n      <Box display={\"flex\"}>\n        <Box p={2} flex={\"auto\"}>\n          <p className={styles.statLabel}>Viento</p>\n          <p className={styles.statValue}>\n            {(currentWeather && `${currentWeather.wind?.speed} KM/h`) || \"\"}\n          </p>\n        </Box>\n        <Box p={2} flex={\"auto\"}>\n          <p className={styles.statLabel}>Sensación Térmica</p>\n          <p className={styles.statValue}>\n            {currentWeather?.feels_like\n              ? `${currentWeather?.feels_like}°C`\n              : \"No hay datos\"}\n          </p>\n        </Box>\n      </Box>\n      <Collapse in={showDetails} mountOnEnter unmountOnExit>\n        <Divider variant=\"middle\" />\n        <WeatherDetails />\n      </Collapse>\n      <CardActions>\n        <Button\n          endIcon={showDetails ? <ExpandLess /> : <ExpandMore />}\n          color=\"primary\"\n          onClick={() => setShowDetails((show) => !show)}\n        >\n          {showDetails ? \"Ver menos\" : \"Ver más\"}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default WeatherCard;\n","import { createStyles, Grid, makeStyles, Theme } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport ForecastCard from \"../../components/forecast-card\";\nimport WeatherCard from \"../../components/weather-card\";\nimport { useWeather } from \"../../contexts/weather\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      [theme.breakpoints.up(\"md\")]: {\n        marginRight: \"20%\",\n        marginLeft: \"20%\",\n      },\n    },\n  })\n);\n\nconst CityWeather = () => {\n  const { getAllWeatherData, location } = useWeather();\n  const styles = useStyles();\n  useEffect(() => {\n    (async () => await getAllWeatherData())();\n  // eslint-disable-next-line\n  }, [location]);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} className={styles.card}>\n        <WeatherCard />\n      </Grid>\n      <Grid item xs={12} className={styles.card}>\n        <ForecastCard />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CityWeather;\n"],"sourceRoot":""}